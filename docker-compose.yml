volumes:
  postgres:
  openfga_postgres:
  kratos_postgres:

services:
  postgres:
    image: postgres:14
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    profiles:
      - 'dev'
      - 'ci'

  openfga-postgres:
    image: postgres:14
    volumes:
      - openfga_postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    profiles:
      - 'dev'
      - 'ci'

  openfga-migrate:
    depends_on:
      openfga-postgres:
        condition: service_healthy
    image: openfga/openfga:latest
    command: migrate
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://postgres:password@openfga-postgres:5432/postgres?sslmode=disable
    profiles:
      - 'dev'
      - 'ci'

  openfga:
    depends_on:
      openfga-migrate:
        condition: service_completed_successfully
    image: openfga/openfga:latest
    environment:
      - OPENFGA_DATASTORE_ENGINE=postgres
      - OPENFGA_DATASTORE_URI=postgres://postgres:password@openfga-postgres:5432/postgres?sslmode=disable
      - OPENFGA_LOG_FORMAT=json
    command: run
    ports:
      # Needed for the http server
      - '8080:8080'
      # Needed for the grpc server (if used)
      - '8081:8081'
      # Needed for the playground (Do not enable in prod!)
      - '3000:3000'
    profiles:
      - 'dev'
      - 'ci'

  # TODO: create Kratos configuration
  # kratos-migrate:
  #   image: oryd/kratos:v1.3.1
  #   depends_on:
  #     kratos-postgres:
  #       condition: service_healthy
  #   volumes:
  #     - ./infra/ory-kratos:/etc/config/kratos:ro
  #   command: -c /etc/config/kratos/kratos.yaml migrate sql -e --yes
  #   restart: on-failure
  #   profiles:
  #     - 'dev'
  #     - 'ci'

  # kratos:
  #   depends_on:
  #     kratos-migrate:
  #       condition: service_completed_successfully
  #   image: oryd/kratos:v1.3.1
  #   ports:
  #     - '4433:4433'
  #     - '4434:4434'
  #   restart: unless-stopped
  #   command: serve -c /etc/config/kratos/kratos.yaml --dev --watch-courier
  #   volumes:
  #     - ./infra/ory-kratos:/etc/config/kratos:ro
  #   profiles:
  #     - 'dev'
  #     - 'ci'
  #   extra_hosts:
  #     - 'host.docker.internal:host-gateway'

  # kratos-postgres:
  #   image: postgres:16
  #   environment:
  #     POSTGRES_USER: dbuser
  #     POSTGRES_PASSWORD: secret
  #     POSTGRES_DB: kratosdb
  #   volumes:
  #     - kratos_postgres:/var/lib/postgresql/data
  #   profiles:
  #     - 'dev'
  #     - 'ci'

  # kratos-selfservice-ui-node:
  #   image: oryd/kratos-selfservice-ui-node:v1.3.0
  #   environment:
  #     PORT: 4455
  #     BASE_PATH: /self-service-ui
  #     KRATOS_PUBLIC_URL: ${KRATOS_PUBLIC_DOCKER_URL:-http://host.docker.internal:4433}
  #     KRATOS_BROWSER_URL: ${KRATOS_PUBLIC_URL:-http://127.0.0.1:4433}
  #     KRATOS_ADMIN_URL: http://kratos:4434
  #     COOKIE_SECRET: changeme
  #     CSRF_COOKIE_NAME: cookie_name
  #     CSRF_COOKIE_SECRET: changeme
  #     DANGEROUSLY_DISABLE_SECURE_CSRF_COOKIES: true
  #     # This is insecure and should only be used for development purposes
  #     NODE_TLS_REJECT_UNAUTHORIZED: 0
  #   ports:
  #     - '4455:4455'
  #   restart: on-failure
  #   extra_hosts:
  #     - 'host.docker.internal:host-gateway'
  #   profiles:
  #     - 'dev'
  #     - 'ci'

  # mailslurper:
  #   image: oryd/mailslurper:latest-smtps
  #   ports:
  #     - '1025:1025'
  #     - '4436:4436'
  #     - '4437:4437'
  #   profiles:
  #     - 'dev'
  #     - 'ci'
